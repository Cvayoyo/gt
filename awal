bot = getBot()
-- statuses = true (ario)
-- statuses = false (nimas)
statuses = true
rotation = bot.rotation
function drop_cake()
    warps(storage_cake)
    bot.custom_status = "Drop Mooncake"
    if bot:isInWorld() and bot:getWorld().name:lower()==split(storage_cake,"|")[1]:lower() and bot.status == BotStatus.online then
        for d,T in ipairs(mooncake) do
            while bot:getInventory():getItemCount(T)>0 do
                warps(storage_cake)
                bot:findOutput()
                sleep(1000)
                bot:drop(T, bot:getInventory():getItemCount(T))
                sleep(500)
            end
        end
    end
    bot.custom_status = "Done All - Harvest Fest"
end
function template_rotasi()
    bot.reconnect_interval = 16
    bot.collect_interval = 25
    bot.object_collect_delay = 0
    bot.collect_range = 10
    bot.collect_path_check = false
    if statuses then
        rotation.break_x = 45
        rotation.break_y = 17
    else
        rotation.break_x = 3
        rotation.break_y = 1
    end
    rotation.custom_position = true
    rotation.auto_jammer = true
    rotation.dynamic_delay = false
    rotation.one_by_one = true
    rotation.pnb_in_home = false
    rotation.ignore_plant = false
    rotation.auto_fill = false
    bot.anti_toxic = true
    bot.auto_ban = false
    bot.rest_interval = 2400
    bot.rest_time = 60
    bot.auto_rest_mode = false
    rotation.break_interval = 0.17
    rotation.plant_interval = 0.18
    rotation.harvest_interval = 0.18
    rotation.warp_interval = 12
    bot.custom_status = ""
    bot.wear_storage = "AWALARIO|VRI877ZE21"
    bot.gem_limit = 10000
end

---yang bisa di copy
takes = false
world_malady = "AWALARIO|VRI877ZE21"
extra_sleep = 0 -- extra sleep after the malady removed
delay_spam = 6000
text       = { 'Aku Ario Ganteng Kill','Aku Ario Ganteng Doxing','Aku Ario Ganteng kill'}

Malady     = {
    'Torn Punching Muscle',
    'Gem Cuts',
    'Broken Heart',
    'Grumbleteeth',
    'Chicken Feet',
    'Lupus',
    'Moldy Guts',
    'Ecto-Bones',
    'Chaos Infection',
    'Fatty Liver',
    'Brainworms'
}

-- var
local world
auto_vials = false
-- body ( don't touch any )

function warp(world, id)
    world = world:upper()
    id = id or ''
    nuked = false
    stuck = false
    if not bot:isInWorld(world) then
        addEvent(Event.variantlist, function(var, netid)
            if var:get(0):getString() == "OnConsoleMessage" then
                if var:get(1):getString() == "That world is inaccessible." then
                    nuked = true
                    unlistenEvents()
                end
            end
        end)
        while not bot:isInWorld(world) and not nuked do
            bot:warp(id == '' and world or world .. ('|' .. id))
            sleep(5000)
        end
        removeEvent(Event.variantlist)
    end
    if bot:isInWorld(world) and getTile(bot.x, bot.y).fg == 6 and id ~= '' then
        count = 0
        while getTile(bot.x, bot.y).fg == 6 and not stuck do
            bot:warp(id == '' and world or world .. ('|' .. id))
            sleep(5000)
            count = count + 1
            if count % 5 == 0 then
                stuck = true
            end
        end
    end
end
function split(abc, def)
    if def==nil then
        def="%s"
    end
    local t={}
    for str in string.gmatch(abc,"([^"..def.."]+)") do
        table.insert(t,str)
    end
    return t
end
function warps(x)
    while bot:getWorld().name:lower() ~= split(x,"|")[1]:lower() or getTile(bot.x, bot.y).fg == 6 do
        bot:warp(x)
        -- bot:sendPacket(3,"action|join_request\nname|"..x.."\ninvitedWorld|0")
        sleep(13000)  
    end
end
function reconnect(world, id, x, y)
    if bot.status ~= BotStatus.online then
        local sended = false
        while bot.status ~= BotStatus.online or bot:getPing() == 0 do
            sleep(10000)
            if bot.status == BotStatus.account_banned and not sended then
                log("Failed to reconnect, account is banned")
                sended = true
            end
        end
        sleep(5000)
    end
    if bot.status == BotStatus.online then
        if world and not bot:isInWorld() then
            warp(world, id)
            if x and y then
                while not bot:isInTile(x, y) do
                    bot:findPath(x, y)
                    sleep(500)
                end
            end
        end
    end
end

function custom_status(text)
    getBot().custom_status = tostring(text)
end

function log(text)
    print('[ ' .. bot.name .. ' ] -> ' .. tostring(text))
end

function clear_console()
    for i = 1, 50 do
        bot:getConsole():append("")
    end
end

function find_command_status()
    for _, v in pairs(bot:getConsole().contents) do
        if v:find("Status:") and bot.status == 1 then
            return true
        end
        sleep(10)
    end
    return false
end

function untill_malady()
    for k, content in pairs(bot:getConsole().contents) do
        for _, malady in ipairs(Malady) do
            if content:find(malady) then
                local hours, minutes, seconds
                hours, minutes, seconds = content:match("(%d+) hours?, (%d+) mins?, (%d+) secs? left")

                if not hours then
                    minutes, seconds = content:match("(%d+) mins?, (%d+) secs? left")
                    hours = 0
                end

                if not minutes then
                    seconds = content:match("(%d+) secs? left")
                    minutes = 0
                end
                seconds = seconds or 0
                if hours and minutes and seconds then
                    local total_seconds = (tonumber(hours) * 3600) + (tonumber(minutes) * 60) + tonumber(seconds) + extra_sleep
                    custom_status(malady)
                    return total_seconds, content
                else
                    custom_status(malady)
                    return 0, content
                end
            end
        end
    end
    return false, nil
end

function check_malady()
    if bot:isInWorld() and not world then
        local t = tostring(getWorld().name)
        if t ~= "EXIT" then
            world = t
        else
            log('World is EXIT, not saving to variable')
        end
    end

    if bot:isInWorld() and bot.status == 1 and world then
        clear_console()
        sleep(1000)
        bot:say('/status')
        sleep(3000)
    end

    local malady_found = false

    if find_command_status() and bot.status == 1 and bot:isInWorld() then
        local malady_duration, content_found = untill_malady()
        if content_found then
            malady_found = true
            log('Content found: ' .. content_found)
            -- if not rotation.enabled then
            --     rotation.enabled = true
            -- end
            sleep(2000)
            -- sleep(malady_duration * 1000)
            bot:leaveWorld()
            sleep(2000)
            return content_found
        else
            log('No malady content found in bot console.')
        end
    end

    if not malady_found and bot.status == 1 then
        local attempt_counter = 0

        while not malady_found and bot.status == 1 do
            while not bot:isInWorld() do
                warp(world)
            end

            custom_status(" ")
            clear_console()
            sleep(1000)
            bot:say("/status")
            sleep(3000)
            rotation.enabled = false
            reconnect(world, '')
            lopi = 0
            while bot:isInWorld() and lopi < 3 do
                -- reconnect(world, '')
                index = math.random(#text)
                bot:say(text[index])
                -- if getTile(bot.x, bot.y).fg == 6 or bot.y == 0 then
                --     bot:findPath(45,18)
                --     sleep(2000)
                -- end
                -- bot:moveUp(1)
                sleep(delay_spam)
                if bot.malady ~= 0 then
                    break
                end
                lopi = lopi + 1
            end
            local malady_duration, content_found = untill_malady()
            if content_found then
                malady_found = true
                -- rotation.enabled = true
                log('Malady detected: ' .. content_found)
                sleep(malady_duration * 1000)
            end

            attempt_counter = attempt_counter + 1

            if attempt_counter >= 5 then
                log('Bot will disconnect and retry after 25 attempts')
                -- bot:disconnect()
                bot:leaveWorld()
                sleep(5000)
                -- reconnect(world, '')
                attempt_counter = 0
            end
        end
    end
    return malady_found
end
--end yang bisa copy

function rotasi_up()
    if not rotation.clear_objects then
        rotation.clear_objects = true
    end
    if rotation.harvest_until_level then
        rotation.harvest_until_level = false
    end
    if not rotation.auto_fill then
        rotation.auto_fill = true
    end
end

function rotasi_down()
    if rotation.clear_objects then
        rotation.clear_objects = false
    end
    if not rotation.harvest_until_level then
        rotation.harvest_until_level = true
    end
    if rotation.auto_fill then
        rotation.auto_fill = false
    end
end

function auto_malady()
    ons_malady = bot.auto_malady
    ons_malady.enabled = true
    ons_malady.auto_surgery_station = true
    if auto_vials then
        ons_malady.auto_vial = true
    end
    ons_malady.auto_chicken_feet = true
    ons_malady.auto_grumbleteeth = true
    ons_malady.auto_refresh = true
    ons_malady.storage = "ARIOXSAVE:VRI877ZE21"
    ons_malady.vial = 2 -- Chaos Infection (By Menu Order)
    ons_malady:addHospital("HOMEARIO|VRI877ZE21|1|2")
    ons_malady:addHospital("NATSUCQ|2|3")
    set_spam = bot.auto_spam
    set_spam.random_interval = true
    set_spam.messages[1] = "Iyo Et Bambang Toxic"
    set_spam.messages[2] = "Iyo Et Bambang Doxing"
    set_spam.messages[3] = "Iyo Et Bambang Kill"
    -- set_spam.messages[4] = "Sell Df 10 Wls, only take all"
end

template_rotasi()
tutorial = bot.auto_tutorial
tutorial.enabled = true
tutorial.auto_quest = true
tutorial.set_as_home = true
tutorial.set_high_level = true
tutorial.set_random_skin = true
tutorial.set_random_profile = true
rotation.enabled = false
while bot.level < 6 and bot:getInventory():getItemCount(370) == 0 do
    bot.custom_status = "WAIT LEVEL 6"
    sleep(10000)
end
auto_malady()
-- rotation.enabled = true
while bot.malady == 0 do
    check_malady()
    sleep(3000)
end

while true do
    if bot.level >= 12 then
        tutorial.enabled = false
        rotasi_up()
        if bot:getInventory():getItemCount(98) == 0 then
            bot.auto_wear = true
        end
        rotation.enabled = true
        break
    elseif bot.level >= 6 and bot:getInventory():getItemCount(370) > 0 then
        rotasi_down()
        tutorial.enabled = false
        bot.custom_status = "Script Running!!!"
        if not rotation.enabled then
            rotation.enabled = true
        end
    end
    sleep(10000)
end
bot.custom_status = ""

while bot:getInventory():getItemCount(202) < 6 do
    if bot:isInWorld() then
        bot:buy("small_lock")
        sleep(500)
    end
end
